apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: scheduler
    tier: control-plane
  name: {{ .Values.scheduler.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      component: scheduler
      tier: control-plane
  replicas: {{ .Values.scheduler.replicaCount }}
  template:
    metadata:
      labels:
        component: scheduler
        tier: control-plane
        version: second
      annotations:
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '{{ .Values.metrics.port }}'
        prometheus.io/scheme: 'https'
        prometheus.io/path: '/metrics'
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.scheduler.name }}
      containers:
      - command:
        - /bin/kube-scheduler
        - --config=/etc/kubernetes/{{ .Values.scheduler.name }}/{{ .Values.scheduler.name }}-config.yaml
        - --bind-address=0.0.0.0
        - --secure-port={{ .Values.metrics.port }}
        - --authentication-skip-lookup=true
        - --authentication-tolerate-lookup-failure=true
        - --authorization-always-allow-paths=/metrics
        - --v={{ .Values.scheduler.logLevel }}
        image: {{ .Values.scheduler.image }}
        imagePullPolicy: {{ .Values.scheduler.imagePullPolicy }}
        env:
        {{- if .Values.carbonAware.enabled }}
        # API key is always needed when carbon awareness is enabled
        - name: ELECTRICITY_MAP_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.scheduler.name }}-secrets
              key: electricity-map-api-key
        # Only set threshold if it's not the default value (200)
        {{- if ne (.Values.carbonAware.carbonIntensityThreshold | toString) "200.0" }}
        - name: CARBON_INTENSITY_THRESHOLD
          value: "{{ .Values.carbonAware.carbonIntensityThreshold }}"
        {{- end }}
        # Only set region if it's not the default (US-CAL-CISO)
        {{- if ne .Values.carbonAware.electricityMap.region "US-CAL-CISO" }}
        - name: ELECTRICITY_MAP_API_REGION
          value: "{{ .Values.carbonAware.electricityMap.region }}"
        {{- end }}
        # Only set max delay if it's not the default (24h)
        {{- if ne .Values.scheduler.maxSchedulingDelay "24h" }}
        - name: MAX_SCHEDULING_DELAY
          value: "{{ .Values.scheduler.maxSchedulingDelay }}"
        {{- end }}
        {{- end }}
        {{- if .Values.priceAware.enabled }}
        - name: PRICING_ENABLED
          value: "true"
        - name: PRICING_PROVIDER
          value: "{{ .Values.priceAware.provider }}"
        - name: PRICING_SCHEDULES_PATH
          value: "/etc/kubernetes/{{ .Values.scheduler.name }}/pricing-schedules.yaml"
        {{- end }}
        {{- if .Values.hardwareProfiles.enabled }}
        - name: HARDWARE_PROFILES_PATH
          value: "{{ .Values.hardwareProfiles.mountPath }}/hardware-profiles.yaml"
        {{- end }}
        {{- if and .Values.metrics.enabled .Values.metrics.prometheus }}
        # Prometheus metrics configuration
        - name: PROMETHEUS_URL
          value: "{{ .Values.metrics.prometheus.url }}"
        {{- if .Values.metrics.prometheus.queryTimeout }}
        - name: PROMETHEUS_QUERY_TIMEOUT
          value: "{{ .Values.metrics.prometheus.queryTimeout }}"
        {{- end }}
        {{- if .Values.metrics.prometheus.useDCGM }}
        - name: PROMETHEUS_USE_DCGM
          value: "{{ .Values.metrics.prometheus.useDCGM }}"
        {{- end }}
        {{- if .Values.metrics.prometheus.dcgmPowerMetric }}
        - name: PROMETHEUS_DCGM_POWER_METRIC
          value: "{{ .Values.metrics.prometheus.dcgmPowerMetric }}"
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.metrics.port }}
          name: https
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.metrics.port }}
            scheme: HTTPS
          initialDelaySeconds: {{ .Values.scheduler.probes.livenessProbe.initialDelaySeconds }}
        name: {{ .Values.scheduler.name }}-kube-scheduler
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.metrics.port }}
            scheme: HTTPS
          initialDelaySeconds: {{ .Values.scheduler.probes.readinessProbe.initialDelaySeconds }}
        resources: {{ toYaml .Values.scheduler.resources | nindent 10 }}
        securityContext:
          privileged: false
        volumeMounts:
          - name: config-volume
            mountPath: /etc/kubernetes/{{ .Values.scheduler.name }}
          {{- if .Values.priceAware.enabled }}
          - name: pricing-schedules-volume
            mountPath: /etc/kubernetes/{{ .Values.scheduler.name }}/pricing-schedules.yaml
            subPath: schedules.yaml
          {{- end }}
          {{- if .Values.hardwareProfiles.enabled }}
          - name: hardware-profiles-volume
            mountPath: {{ .Values.hardwareProfiles.mountPath }}
          {{- end }}
      hostNetwork: false
      hostPID: false
      {{- with .Values.scheduler.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scheduler.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scheduler.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.scheduler.name }}-config
        {{- if .Values.priceAware.enabled }}
        - name: pricing-schedules-volume
          configMap:
            name: {{ .Values.scheduler.name }}-pricing-schedules
        {{- end }}
        {{- if .Values.hardwareProfiles.enabled }}
        - name: hardware-profiles-volume
          configMap:
            name: {{ .Values.scheduler.name }}-hw-profiles
        {{- end }}